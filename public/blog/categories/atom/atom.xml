<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: atom | Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/blog/categories/atom/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2016-04-30T16:11:43+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Atomエディタを使ってReact.jsを試してみた]]></title>
    <link href="http://grandbig.github.io/blog/2015/11/29/react-tutorial-by-using-atom/"/>
    <updated>2015-11-29T01:34:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2015/11/29/react-tutorial-by-using-atom</id>
    <content type="html"><![CDATA[<h4>Atomエディタとは</h4>

<p>筆者はこれまでWeb系のファイルは全てvimで書いてきました。<br/>
このまま、vimを使い続けても良いのですが、最近やっと一般的に認知され始めた <a href="https://atom.io/">Atom</a> を使ってみようかなと思いつきで始めてみます笑<br/>
(Atomが招待制だった頃に少々触ってはいたのですが、改めて触ってみると、便利ですね&hellip;。)</p>

<p>因みにAtomとはGitHub製のオープンソースエディタです。<br/>
2015年6月にバージョン1.0が公開され、本記事の執筆時点でバージョン1.2.4が最新版となっています。<br/>
基本的な使いやすいと思った機能を下記にあげておきます。</p>

<ul>
<li>HTML, CSS, JavaScriptにおける予測変換機能</li>
<li>HTML, CSS, JavaScriptにおける対応する括弧の表示</li>
<li>HTML, CSS, JavaScriptにおける属性の色彩表示</li>
</ul>


<p>本日はAtomエディタを使って、基本的なReact.jsの使い方を勉強したいと思います。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<h4>React.jsとは</h4>

<p>さて、続いて、React.jsについて簡単に説明します。<br/>
<a href="https://facebook.github.io/react/index.html">React.js</a>とはFacebook製のUI構築ライブラリです。MVCで言うところの <strong>View</strong> のみをサポートします。MVC全てをサポートするわけではないため、<a href="https://angularjs.org/">AngularJS</a>や<a href="http://backbonejs.org/">Backbone.js</a>との併用が可能です。</p>

<p>React.jsはその仕組から大規模設計の際にも管理が可能であるとのことなので、メリット/デメリットを見極めつつ、ケースバイケースで使うのが良いのでしょう。<br/>
今回は勉強の意味を兼ねて、触ってみたいと思います。</p>

<h4>React.jsを使って、基本的なことを書いてみる</h4>

<p>本記事では <strong>v0.14.0</strong> のReact.jsを利用しています。<br/>
〜v0.13.xまでと変更点もあるかと思うので、<a href="http://facebook.github.io/react/blog/2015/10/07/react-v0.14.html">Release Note</a>は常に追うと良いでしょう。</p>

<p>では、早速書いていきます。基本的には本家のチュートリアルに沿って学んでいきました。<br/>
サンプルとして、クーポン一覧サイトを作ってみたいと思います。(実際のクーポンではありませんので、注意してください。)</p>

<p>まず、HTMLファイルに関しては本家のGitHub上のソースをそのまま流用すると楽だと思います。</p>

<p>```html
&lt;!DOCTYPE html>
<html></p>

<pre><code>&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;title&gt;React Tutorial&lt;/title&gt;
    &lt;!-- Not present in the tutorial. Just for basic styling. --&gt;
    &lt;link rel="stylesheet" href="css/base.css" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div id="content"&gt;&lt;/div&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.0/react.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.0/react-dom.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.6.15/browser.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js"&gt;&lt;/script&gt;
    &lt;script src="https://cdnjs.cloudflare.com/ajax/libs/marked/0.3.2/marked.min.js"&gt;&lt;/script&gt;
    &lt;script type="text/babel" src="js/coupon.js"&gt;&lt;/script&gt;
    &lt;script type="text/babel"&gt;
        // To get started with this tutorial running your own code, simply remove
        // the script tag loading scripts/example.js and start writing code here.
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>

<p></html>
```</p>

<p>次に、サイトのレイアウトは下記とします。</p>

<p>```</p>

<h1>content</h1>

<p>┗━━ .couponBox</p>

<pre><code>   ┗━━ .couponList
          ┗━━ .coupon
                 ┣━━ .couponImg
                 ┣━━ .couponName
                 ┗━━ .shopName
</code></pre>

<p>```</p>

<p>これに伴い、CSSファイルを簡単に下記としました。</p>

<p>```css</p>

<h1>content {</h1>

<p>  width: 96%;
}
.couponBox {</p>

<pre><code>  overflow: auto;
</code></pre>

<p>}
.couponList {</p>

<pre><code>  overflow: auto;
</code></pre>

<p>}
.coupon {</p>

<pre><code>  overflow: auto;
</code></pre>

<p>}
.couponImg {</p>

<pre><code>  width:200px;
    float:left;
</code></pre>

<p>}
.couponInfo {</p>

<pre><code>  float: left;
</code></pre>

<p>}
```</p>

<p>そして、最も重要なJSファイルは下記です。</p>

<p>```js
// テストデータ
var data = [</p>

<pre><code>{couponName: "ダブルチーズバーガー20円引き", shopName: "マ◯ドナルド新宿店", img: "http://urx.blue/pxQ3"},
{couponName: "ビッグマック100円引き", shopName: "マ◯ドナルド新宿店", img: "http://urx.blue/pxQg"},
{couponName: "フィレオフィッシュ30円引き", shopName: "マ◯ドナルド新宿店", img: "http://urx.blue/pxQl"}
</code></pre>

<p>];</p>

<p>// クーポン一覧をラップするDivタグの作成
var CouponBox = React.createClass({displayName: &lsquo;CouponBox&rsquo;,</p>

<pre><code>render: function() {
    return (
        &lt;div className="couponBox"&gt;
            &lt;CouponList data={this.props.data}/&gt;
        &lt;/div&gt;
    );
}
</code></pre>

<p>});</p>

<p>// クーポン一覧Divタグの作成
var CouponList = React.createClass({</p>

<pre><code>render: function() {
    var couponNodes = this.props.data.map(function (coupon) {
        return (
            &lt;Coupon couponName={coupon.couponName} shopName={coupon.shopName} img={coupon.img}&gt;&lt;/Coupon&gt;
        );
    });
    return (
        &lt;div className="couponList"&gt;
            {couponNodes}
        &lt;/div&gt;
    );
}
</code></pre>

<p>});</p>

<p>// クーポンDivタグの作成
var Coupon = React.createClass({</p>

<pre><code>render: function() {
    return (
        &lt;div className="coupon"&gt;
            &lt;img className="couponImg" src={this.props.img} /&gt;
            &lt;div className="couponInfo"&gt;
                &lt;div className="couponName"&gt;{this.props.couponName}&lt;/div&gt;
                &lt;div className="shopName"&gt;{this.props.shopName}&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    );
}
</code></pre>

<p>});</p>

<p>// レンダリング
ReactDOM.render(</p>

<pre><code>&lt;CouponBox data={data}/&gt;,
document.getElementById('content')
</code></pre>

<p>);
```</p>

<p>上記のソースコードより、下記の画面を作成しました。<br/>
<img src="/images/atom_react_1.png" alt="サンプルのクーポンサイト" /></p>

<p>React.jsを使うことで、</p>

<ul>
<li>レイアウトの要素をオブジェクト単位で捉えやすい</li>
<li>レイアウトをツリー構造で捉えやすい</li>
</ul>


<p>と感じました。<br/>
まだチュートリアルの範囲でしか触れていないので、これから徐々に利用範囲を拡大していくことで学んでいきたいと思います。<br/>
といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



]]></content>
  </entry>
  
</feed>
