<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: location | Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/blog/categories/location/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2016-04-30T16:11:43+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS8でrequestLocationが使える！？]]></title>
    <link href="http://grandbig.github.io/blog/2015/09/20/requestlocation/"/>
    <updated>2015-09-20T01:21:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2015/09/20/requestlocation</id>
    <content type="html"><![CDATA[<h4>実はiOS8.4.1でrequestLocationが使える</h4>

<p>さて、今回はたまたま気づいたバグ？の紹介です。<br/>
皆様、ご存知の通り, iOS9から <strong>requestLocation</strong> なるものがCoreLocation.frameworkに追加されました。<br/>
これにより、1回だけ現在地を取得する処理を自作せずにframeworkに任せることができるようになりました。</p>

<p>しかし、iOS9からとアナウンスされているものの、実は <strong>iOS8.4.1</strong> でも利用できました。<br/>
コードは下記になります。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>




<!-- more -->


<p>```objective-c
// ViewController.m</p>

<h1>import &ldquo;ViewController.h&rdquo;</h1>

<h1>import &lt;CoreLocation/CoreLocation.h></h1>

<p>@interface ViewController () <CLLocationManagerDelegate></p>

<p>@property (strong, nonatomic) CLLocationManager *lm;</p>

<p>@end</p>

<p>@implementation ViewController</p>

<ul>
<li><p>(void)viewDidLoad {
  [super viewDidLoad];</p>

<p>  self.lm = [[CLLocationManager alloc] init];
  self.lm.delegate = self;
  [self.lm requestWhenInUseAuthorization];
}</p></li>
<li><p>(void)didReceiveMemoryWarning {
  [super didReceiveMemoryWarning];
}</p></li>
<li><p>(void)locationManager:(CLLocationManager *)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status {
  if (status == kCLAuthorizationStatusNotDetermined) {
      // ユーザが位置情報の使用を許可していない
      NSLog(@&ldquo;kCLAuthorizationStatusNotDetermined&rdquo;);
  } else if(status == kCLAuthorizationStatusAuthorizedAlways) {
      // ユーザが位置情報の使用を常に許可している場合
   NSLog(@&ldquo;kCLAuthorizationStatusAuthorizedAlways&rdquo;);
  } else if(status == kCLAuthorizationStatusAuthorizedWhenInUse) {
      // ユーザが位置情報の使用を使用中のみ許可している場合
      NSLog(@&ldquo;kCLAuthorizationStatusAuthorizedWhenInUse&rdquo;);
  }
}</p></li>
<li><p>(void)locationManager:(CLLocationManager <em>)manager didUpdateLocations:(NSArray<CLLocation *> </em>)locations {
  // 位置情報の取得に成功した場合
  NSLog(@&ldquo;%@&rdquo;, locations.firstObject);
}</p></li>
<li><p>(void)locationManager:(CLLocationManager <em>)manager didFailWithError:(NSError </em>)error {
  // 位置情報の取得に失敗した場合
  NSLog(@&ldquo;%@&rdquo;, error);
}</p></li>
<li><p>(IBAction)getLocation:(id)sender {
  if([self.lm respondsToSelector:@selector(requestLocation)]) {
      // iOS9.x以上の場合
      [self.lm requestLocation];
  } else {
      // iOS8.x以下の場合
      NSLog(@&ldquo;iOS8.xです&rdquo;);
  }
}
```</p></li>
</ul>


<p>騙されたと思って試してみてください。<br/>
なぜかiOS8.4.1でも<code>requestLocation</code>が実行されますので。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swiftを使って、位置情報を取得してみよう！]]></title>
    <link href="http://grandbig.github.io/blog/2014/10/19/developing-cllocation-app-by-using-swift/"/>
    <updated>2014-10-19T22:41:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2014/10/19/developing-cllocation-app-by-using-swift</id>
    <content type="html"><![CDATA[<h3>Swiftを使って位置情報を使ってみよう</h3>

<p>今日はSwiftを使った位置情報の取得を試してみたいと思います。<br/>
今日もObjective-Cの書式と比較しながら進めてみます。</p>

<h4>ライブラリのimport</h4>

<ul>
<li>Objective-Cの場合</li>
</ul>


<p>```objective-c
// ViewController.hファイル</p>

<h1>import &lt;UIKit/UIKit.h></h1>

<p>```</p>

<p>```objective-c
// ViewController.mファイル</p>

<h1>import &ldquo;ViewController.h&rdquo;</h1>

<h1>import &lt;CoreLocation/CoreLocation.h></h1>

<p>```</p>

<ul>
<li>Swiftの場合</li>
</ul>


<p><code>
// ViewController.swiftファイル
import UIKit
import CoreLocation
</code></p>

<!--more-->


<h4>インスタンス変数の宣言</h4>

<ul>
<li>Objective-Cの場合</li>
</ul>


<p>```objective-c
// ViewController.mファイル
@interface ViewController ()</p>

<p>@property (strong, nonatomic) CLLocationManager *lm;</p>

<p>@end
```
* Swiftの場合</p>

<p>```
// ViewController.swiftファイル
class ViewController: UIViewController {</p>

<pre><code>var lm:CLLocationManager?

.....
</code></pre>

<p>}</p>

<p>```</p>

<h4>Delegate Protocolの宣言</h4>

<ul>
<li>Objective-Cの場合</li>
</ul>


<p>```objective-c
// ViewController.mファイル
@interface ViewController() <CLLocationManagerDelegate> {</p>

<pre><code>......
</code></pre>

<p>}
```</p>

<ul>
<li>Swiftの場合</li>
</ul>


<p>```
// ViewController.swiftファイル
class ViewController: UIViewController, CLLocationManagerDelegate {</p>

<pre><code>......
</code></pre>

<p>}
```</p>

<h4>viewDidLoadメソッド</h4>

<ul>
<li>Objective-Cの場合</li>
</ul>


<p>```objective-c
// ViewController.mファイル
&ndash; (void)viewDidLoad {</p>

<pre><code>[super viewDidLoad];

if([self.lm respondToSelector:@selector(requestAlwaysAuthorization)]) {
    [self.lm requestAlwaysAuthorization];
}
</code></pre>

<p>}
```</p>

<ul>
<li>Swiftの場合</li>
</ul>


<p>```
override func viewDidLoad() {</p>

<pre><code>super.viewDidLoad()

if((self.lm?.respondToSelector("requestAlwaysAuthorization")) != nil) {
    self.lm?.requestAlwaysAuthorization()
}
</code></pre>

<p>}
```</p>

<h4>CLLocationManagerDelegateメソッド</h4>

<ul>
<li>Objective-Cの場合</li>
</ul>


<p>```objective-c
// ViewController.mファイル
// 位置情報の許可設定
&ndash; (void)locationManager:(CLLocationManager *)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status
{</p>

<pre><code>if (status == kCLAuthorizationStatusNotDetermined) {
} else if(status == kCLAuthorizationStatusAuthorizedAlways) {
    [self.lm startUpdatingLocation];
} else if(status == kCLAuthorizationStatusAuthorizedWhenInUse) {
    [self.lm startUpdatingLocation];
}
</code></pre>

<p>}</p>

<p>// 位置情報の更新ハンドリング処理
&ndash; (void)locationManager:(CLLocationManager <em>)manager didUpdateLocations:(NSArray </em>)locations {</p>

<pre><code>CLLocation *currentLocation = locations.lastObject;
CLLocationDegrees lat = currentLocation.coordinate.latitude;
CLLocationDegrees lng = currentLocation.coordinate.longitude;
CLLocationDegrees alt = currentLocation.altitude;
CLLocationDirection course = currentLocation.course;
CLLocationSpeed spd = currentLocation.speed;
CLLocationAccuracy hacc = currentLocation.horizontalAccuracy;
CLLocationAccuracy vacc = currentLocation.verticalAccuracy;
NSDate *dt = currentLocation.timestamp;
</code></pre>

<p>}
```</p>

<ul>
<li>Swiftの場合</li>
</ul>


<p>```
// ViewController.swiftファイル
// 位置情報の許可設定
func locationManager(manager: CLLocationManager!, didChangeAuthorizationStatus status: CLAuthorizationStatus) {</p>

<pre><code>if(status == .NotDetermined) {
} else if(status == .Authorized) {
    self.lm?.startUpdatingLocation()
} else if(status == .AuthorizedWhenInUse) {
    self.lm?.startUpdatingLocation()
}
</code></pre>

<p>}</p>

<p>// 位置情報の更新ハンドリング処理
func locationManager(manager: CLLocationManager!, didUpdateLocations locations: [AnyObject]!) {</p>

<pre><code>var currentLocation:CLLocation? = locations.last as? CLLocation
var lat:CLLocationDegrees? = currentLocation?.coordinate.latitude
var lng:CLLocationDegrees? = currentLocation?.coordinate.longitude
var alt:CLLocationDegrees? = currentLocation?.altitude
var course:CLLocationDirection? = currentLocation?.course
var spd:CLLocationSpeed? = currentLocation?.speed
var hacc:CLLocationAccuracy? = currentLocation?.horizontalAccuracy
var vacc:CLLocationAccuracy? = currentLocation?.verticalAccuracy
var dt:NSDate! = currentLocation?.timestamp
</code></pre>

<p>}
```</p>

<p>これでコーディングは完了です。<br/>
Swiftでも位置情報が取得できるようになりました。<br/>
次回はSwiftで何を書こうかな。<br/>
といったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7とNSTimerと位置情報の取得について]]></title>
    <link href="http://grandbig.github.io/blog/2014/08/02/didupdatetolocation3/"/>
    <updated>2014-08-02T00:19:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2014/08/02/didupdatetolocation3</id>
    <content type="html"><![CDATA[<h3>iOS7で定期間隔での位置情報取得</h3>

<p>本日は一言メモ程度に書きます。<br/>
<a href="http://grandbig.github.io/blog/2013/09/27/location-nstimer/">Backgroundで位置情報を取得しよう！</a>で紹介した<strong>NSTimerで定期時間ごとに位置情報を取得してみよう！</strong>の部分についてiOS7での注意しなければいけないことがありました。</p>

<p>Background起動で位置情報の取得を可能な設定にしておくと、NSTimerが永続的に動くことについては以前お伝えしました。<br/>
このNSTimerで設定した定期間隔ごとに下記のように位置情報の取得ができました。</p>

<p><code>objective-c
CLLocation *location = [locationManager location];
CLLocationCoordinate2D coordinate = [location coordinate];// 座標を取得
NSString *lat = [NSString alloc] initWithFormat:@"%f", coordinate.latitude];  // 経度を取得
NSString *lng = [NSString alloc] initWithFormat:@"%f", coordinate.longitude]; // 緯度を取得
NSLog(@"+++++ [デリゲートによらない場合]緯度,经度: %@, %@", lat, lng);
</code></p>

<p>しかし、iOS7ではある記述をしないとうまくいかないことがわかりました。</p>

<!--more-->


<p>それは<strong>didUpdateLocationsメソッド</strong>です。<br/>
つまり、</p>

<p>```
&ndash; (void)locationManager:(CLLocationManager *)manager</p>

<pre><code> didUpdateLocations:(NSArray *)locations
</code></pre>

<p>{</p>

<p>}
```
の記述が必要なんです。<br/>
これがなかったとしても、NSTimer自体は動くので、処理は定期的に実行されます。<br/>
が、<strong>位置情報の値が全く更新されません</strong>。<br/>
iPhoneを持って移動したとしても、１回目に取得した位置情報の値から変化がないのです。</p>

<p>もし、<strong>NSTimerを使った定期間隔での位置情報の取得をiOS7で行う</strong>のであれば、このことには十分に注意してください。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[didUpdateLocationsを軽く調べてみる]]></title>
    <link href="http://grandbig.github.io/blog/2014/04/08/didupdatetolocation2/"/>
    <updated>2014-04-08T23:03:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2014/04/08/didupdatetolocation2</id>
    <content type="html"><![CDATA[<h3>didUpdateLocationsのNSArray型の引数が気になる！！</h3>

<p>さて、今日はざっくり調べたことを書きます。ほんの数行です！</p>

<!--more-->


<p><a href="http://grandbig.github.io/blog/2014/04/05/didupdatetolocation/">前回</a>、書きましたdidUpdateLocationsを使ってみました。<br/>
最も気になったのが、NSArray型の引数であるlocationsの中身には何が入っているのか？ということです。<br/>
下記のようにソースを書きます。</p>

<p>```objective-c
&ndash; (void)locationManager:(CLLocationManager *)manager</p>

<pre><code> didUpdateLocations:(NSArray *)locations
</code></pre>

<p>{</p>

<pre><code>CLLocation *currentLocation = locations.lastObject;
NSInteger cnt = [locations count];
CLLocationDegrees lat = currentLocation.coordinate.latitude;
CLLocationDegrees lng = currentLocation.coordinate.longitude;

NSLog(@"cnt: %ld,lat: %f, lng: %f", (long)cnt, lat, lng);
</code></pre>

<p>}
```
実際にログを出力してみた結果はというと&hellip;<br/>
2014-04-08 23:02:35.371 LocationPractice[11243:60b] cnt: 1,lat: 35.933374, lng: 139.619913<br/>
2014-04-08 23:02:36.837 LocationPractice[11243:60b] cnt: 1,lat: 35.933351, lng: 139.619884<br/>
2014-04-08 23:02:37.428 LocationPractice[11243:60b] cnt: 1,lat: 35.933327, lng: 139.619856<br/>
&hellip;&hellip;</p>

<p>の繰り返しでした。<br/>
NSArray型のlocationsには最新の位置情報しか入らないようです。<br/>
う〜む。なんでNSArray型なんでしょうか&hellip;。ただ、よくよく考えるとNSMutableArray型でないから要素増えないんでしょうか&hellip;。何て思ったりしました。<br/>
はい。短いけど、今日はここまで。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CLLocationManagerDelegateのdidUpdateToLocationがDeprecated!?]]></title>
    <link href="http://grandbig.github.io/blog/2014/04/05/didupdatetolocation/"/>
    <updated>2014-04-05T11:25:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2014/04/05/didupdatetolocation</id>
    <content type="html"><![CDATA[<h3>didUpdateToLocationではなくdidUpdateLocationsを使うべき!?</h3>

<p>久々に更新します。今日は位置情報サービスで変更があった点に注目してみます。筆者は昨日まで、この変更を気にせずに普通にこれまで通りの方法で位置情報の取得をしていました。<br/>
しかし、よくよく<a href="https://developer.apple.com/library/ios/documentation/CoreLocation/Reference/CLLocationManagerDelegate_Protocol/CLLocationManagerDelegate/CLLocationManagerDelegate.html">AppleのCLLocationManagerDelegate Protocol Reference</a>を見てみると、『locationManager:didUpdateToLocation:fromLocation:』に<strong>Deprecated in iOS 6.0</strong>の文字が&hellip;。<br/>
そして代わりに『locationManager:didUpdateLocations:』というものがありました。<br/>
う〜む&hellip;どうやら今はこちらを使った方が良いようですね。</p>

<!--more-->


<p>しかし、最新のXcode5.1でDeployment Targetを6.0に設定して下記をソースに書いたとしてもDeprecatedとWarningが出ることはありません。<br/>
```objective-c
&ndash; (void)locationManager:(CLLocationManager*)manager</p>

<pre><code>didUpdateToLocation:(CLLocation *)newLocation
       fromLocation:(CLLocation *)oldLocation
</code></pre>

<p>{</p>

<pre><code>CLLocationDegrees lat = [newLocation coordinate].latitude; // 緯度
CLLocationDegrees lng = [newLocation coordinate].longitude; // 経度
CLLocationDistance altitude = newLocation.altitude; // 高度
CLLocationDirection course = newLocation.course; // 方角
CLLocationSpeed speed = newLocation.speed; // 速度
CLLocationAccuracy horizontalAccuracy = newLocation.horizontalAccuracy; //水平方向の精度
CLLocationAccuracy verticalAccuracy = newLocation.verticalAccuracy; //垂直方向の精度
</code></pre>

<p>}
```</p>

<p>これではDeprecatedになっていることに気づかないですよね&hellip;。ま、新iOSがリリースされるごとにリファレンスをきちんと読むべきってことですね。<br/>
はい！では今度からこう書きましょう。</p>

<p>```objective-c
&ndash; (void)locationManager:(CLLocationManager *)manager</p>

<pre><code> didUpdateLocations:(NSArray *)locations
</code></pre>

<p>{</p>

<pre><code>CLLocation *currentLocation = locations.lastObject;
CLLocationDegrees lat = currentLocation.coordinate.latitude; // 緯度
CLLocationDegrees lng = currentLocation.coordinate.longitude; // 経度
CLLocationDistance altitude = currentLocation.altitude; // 高度
CLLocationDirection course = currentLocation.course; // 方角
CLLocationSpeed speed = currentLocation.speed; // 速度
CLLocationAccuracy horizontalAccuracy = currentLocation.horizontalAccuracy; // 水平方向の精度
CLLocationAccuracy verticalAccuracy = currentLocation.verticalAccuracy; // 水ty区方向の精度
</code></pre>

<p>}
```
古い方で位置情報を取得しても少なくともiOS6では問題ありませんでした。が、iOS7ではまだ未検証なので、試してみます。とは言え、新しい方を使うべきだと思いますが&hellip;。<br/>
と言ったところで本日はここまで。</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

]]></content>
  </entry>
  
</feed>
