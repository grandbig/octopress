<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | Takahiro Octopress Blog]]></title>
  <link href="http://grandbig.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://grandbig.github.io/"/>
  <updated>2016-04-30T16:11:43+09:00</updated>
  <id>http://grandbig.github.io/</id>
  <author>
    <name><![CDATA[Takahiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopressでアフィリエイト！]]></title>
    <link href="http://grandbig.github.io/blog/2013/11/21/octopress-affiliate/"/>
    <updated>2013-11-21T22:40:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2013/11/21/octopress-affiliate</id>
    <content type="html"><![CDATA[<h3>Octopressでアフィリエイトを始めよう！！</h3>

<p>さて、本日は久々にOctopressのことについて紹介させて頂きます。<br/>
前々からアフィリエイトはやろうと決めていたのですが、億劫で進んでいませんでした。<br/>
そして、いざやってみたところ、<br/>
<strong>Octopressへの載せ方がわからない！！</strong><br/>
<strong>ネットで調べてもよくわからない！！！</strong><br/>
なんてことがあったのでメモがてら書こうと思った次第です。</p>

<!--more-->


<h4>アフィリエイト広告を表示しよう</h4>

<p>筆者はとりあえず、<strong>iTunesアフィリエイト</strong>と<strong>Google Adsense</strong>に登録してみました。iTunesアフィリエイトは1営業日で審査が通りました。Google Adsenseは1次審査まで1営業日, 2次審査は広告をブログに貼ってから1営業日で通過しました。<br/>
まず、Google Adsenseですが、広告を作成すると下記のように広告を表示するためのコードを取得することができます。<br/>
<img src="/images/octopress_affiliate1.png" alt="Google Adsenseで広告コードを取得" /></p>

<p>これをどこに書き込むかで表示できる場所が異なります。<br/>
1: サイドに表示したい場合<br/>
2: ブログの途中に表示したい場合</p>

<p><strong>1: サイドに表示したい場合</strong><br/>
まず、octopress/source/_includes/custom/asides/ 配下にhtmlを作成します。<br/>
筆者はgoogleAdsense.htmlを作成しました。<br/>
次にそのhtmlを編集して、取得したコードをsectionタグ内に書きます。</p>

<p>```
<section></p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- 広告１ -->


<p><ins class="adsbygoogle"style="display:inline-block;width:300px;height:250px"data-ad-client="*******************"data-ad-slot="**********"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>


<p></section>
```</p>

<p>そして、octopress/_config.ymlを編集します。default_asidesの配列内に自作したhtmlを追記する。<br/>
```
default_asides: [asides/recent_posts.html, asides/github.html, asides/delicious.html, asides/pinboard.html, asides/googleplus.html, custom/asides/googleAdsense.html]</p>

<p>```</p>

<p>これでOKです。Google Adsenseは2次審査が完了するまで空白が表示されるため、正しくできているかどうかは</p>

<p>rake previewを実行<br/>
ブラウザでプレビュー画面にアクセス<br/>
表示されるであろうサイドの辺りを右クリックしてデバックコンソールを開く<br/>
先ほど書き込んだソースがあることを確認</p>

<p>ここまで確認が取れれば、審査終了後、すぐに表示されます(一応、48時間以内と言われていますが…)。</p>

<p><strong>2:ブログの途中に表示したい場合</strong><br/>
例えば下記のようにブログの途中に広告を表示したい場合はどうすれば良いかというと、</p>

<script async src="http://grandbig.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- 広告2 -->


<p><ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins></p>

<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>


<p>ただ単に、取得したコードを表示したいmarkdownファイルに書くだけです。<br/>
ただし、tabが入っている場合はmarkdownの書式として判別されてしまうので注意しましょう。</p>

<p>iTunesアフィリエイトでも下記のようにソースコードを取得することができます。(iTunes Link MakerでiOS Appのリンクを作成)<br/>
<img src="/images/octopress_affiliate2.png" alt="iTunes Link Makerでリンク作成" /></p>

<p>これをGoogle Adsenseのときと同様に貼り付けるとリンクを貼ることができます。<br/>
(筆者は過去のアプリ紹介ページにリンクを貼ってみました。)</p>

<p>他にもいろんなアフィリエイトを試してみようかな！ということで本日はここまで。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressインストールしてみました]]></title>
    <link href="http://grandbig.github.io/blog/2013/09/04/octopress-install/"/>
    <updated>2013-09-04T00:23:00+09:00</updated>
    <id>http://grandbig.github.io/blog/2013/09/04/octopress-install</id>
    <content type="html"><![CDATA[<h2>Octopressとは</h2>

<p>GitHub Pagesと組み合わせて、無料で簡単にブログが作れると噂のフレームワークです。
その噂の真相を確かめるべく、いざOctopressをインストールしてみました。</p>

<p>それがまさかこんな苦労するなんて夢にも思わず…</p>

<!--more-->


<h3>Rubyのインストール</h3>

<p>それではまず以下のコマンドを打ってみよう！
<code>
$ ruby --version
</code></p>

<p>「なんだRubyなんて初めから入っているじゃないか」と油断してはいけません。
確かにMacにはデフォルトでRubyがインストールされています。
しかし、Octopressを使うには1.9.3以上が必要になります。
恐らくデフォルトで入っているのは1.8.7だったのではないでしょうか？</p>

<p>ネットで調べたところ、1.9.3を利用している人が多かったので、ひとまず1.9.3のインストールを目指すことにしました。</p>

<h4>homebrewとFomulaを最新版にアップデート</h4>

<p><code>
$ brew update
</code>
ここでopensslやreadlineなど必要なものをbrewでインストールと書いてあるサイトがあったのですが、
rubyインストール時に必要なものをインストールしてくれるのでrvmのインストールに進みます。<br/>
※筆者は『brew install openssl』を実行してopensslのみ別でインストールしてしまったため後々path周りでハマってしまいました…。(詳細は後ほど)</p>

<h4>rvmをインストール</h4>

<p><code>
$ \curl -L https://get.rvm.io | bash -s stable
$ source ~/.bashrc
</code></p>

<p>rvm -vでバージョンを確認できればrvmが無事インストールされたことになります。
<code>
$ rvm -v
rvm 1.22.3 (master) by Wayne E. Seguin &lt;wayneeseguin@gmail.com&gt;, Michal Papis &lt;mpapis@gmail.com&gt; [https://rvm.io/]
</code></p>

<h3>Octopressをインストール</h3>

<p>さあ、いよいよOctopressをインストールしましょう。
<code>
$ git clone git://github.com/imathis/octopress.git octopress
</code>
問題なければ次の4行も余裕でパスできるはず！
<code>
$ cd octopress
$ gem install bundler
$ bundle install
rake install
</code></p>

<p>筆者はgem install bundlerがうまくいきませんでした。<br/>
エラーメッセージを見る限り、opensslが見つからないらしい…。なぜだ!?ちゃんとopensslをインストールしたはずなのに！<br/>
ちゃんとバージョンだって確認できる!!<br/>
<code>
$ openssl version
OpenSSL 0.9.8x 10 May 2012
</code>
もしやインストールの仕方が違ったからか!?
たぶん見るpathを変えれば良いんだろうけど…<br/>
はい！アンインストール
<code>
$ brew uninstall openssl
</code>
そして、他のライブラリと同様にrvmでインストール
<code>
$ rvm pkg install openssl
</code></p>

<p>これで見事4行をパスしました。</p>

<h3>GitHubの設定</h3>

<p>さて、あともうひと踏ん張りです。<br/>
次はGitHubの設定をしましょう。今回は既にGitHubアカウントを作成していたため、アカウント作成周りは省略します。(恐らく思いつきで作ったのだろう…)<br/>
アカウント作成が終わったら、ホーム画面に移動するはずなので、右下から<em>New repository</em>を選択してGitHub page用のレポジトリを作りましょう！<br/>
下の画像のようにRepository nameに<em>username.github.io</em>を入力だ！(usernameにはGitHubアカウント作成時に作ったユーザ名を入れて下さい。)<br/>
<img src="/images/github_new_repository.png" alt="GitHubページでNew Repositoryを作成" /></p>

<h3>GitHub Pagesを設定</h3>

<p>GitHubの設定で作成したレポジトリをGitHub Pagesに設定します。
```
$ rake setup_github_pages
Enter the read/write url for your repository</p>

<pre><code>(For example, 'git@github.com:your_username/your_username.github.io)
or 'https://github.com/your_username/your_username.github.io')
</code></pre>

<p>Repository url:
```
※末尾に<em>.git</em>はつけないように注意</p>

<h3>静的ページを作成して、デプロイ</h3>

<p>最後に下記2つのコマンドを叩けば、晴れてBlogのできあがり！！
<code>
$ rake generate
$ rake deploy
</code></p>

<p>いかがでしたでしょうか？<br/>
筆者もうまくいかずに何度か諦めそうになりましたが、なんとかBlogを書く領域まで辿りつけました。<br/>
情弱プログラマーは日々精進が大切ですね。
ではまた次回！</p>
]]></content>
  </entry>
  
</feed>
