---
layout: post
title: "はっきりさせよう！iOSのデバイストークン"
date: 2013-09-24 22:57
comments: true
categories: ios devicetoken
---

###iOSのデバイストークンを理解しよう！
今回はプッシュ通知をユーザに送る機能を備えたiPhoneアプリを開発したことがあるエンジニアであれば周知の事実であろう『iOSのデバイストークン』について改めて勉強したいと思います。  
筆者は正直、今日まで全くの勘違いをしていました...。デバイストークンとはアプリ毎に異なるのだと思い込んでいたのです。

<!--more-->

####公式ドキュメントを読もう！
まずは何と言っても[Appleの公式ドキュメント](https://developer.apple.com/jp/devcenter/ios/library/documentation/RemoteNotificationsPG.pdf "Local Notificationおよび
Push Notificationプログラミングガイド")から理解してみよう！ということです。  
ドキュメントには『_APNsが初めてデバイスに接続したときに、APNsからそのデバイスに渡される不透過なデバイス識別子です。(たとえて言えば、デバイストークンは通知先を識別するための電話番号と同じ機能を果たします)_』とあります。ここからわかることはデバイストークンとは個人を特定できるユニークなものだということです。  
次に読み進めていくと、『_APNsは、TLSのピアツーピア認証を利用して、接続してきたデバイスの認証を行います_』、『_プロバイダとAPNs間の接続信頼も、TLSのピアツーピア認証を利用して確立されます。_』と書かれています。何だかふ〜んと言った感じで読み飛ばしてしまいそうですが、実はここは結構重要でした。
このTLS接続は『_一意の秘密鍵と証明書を使用してサービスへの認証を行う_』ことで確立させます。  
最低限ここまで抜粋できれば良しとしましょう笑

####実際に取得してみた結果は？
百聞は一見にしかずということで、実際に自分の目で確かめてみることにしました。  
  
手順は省き、結果を言うと『デバイストークンは端末ごとにユニークなもの』です。  
  
アプリごとにユニークではない、１端末につき１つのデバイストークンということがポイントです！  
それではアプリAにプッシュを送ろうとすると、アプリBにプッシュが届くのではないか？と思うかもしれません。私も昨日まで完全にそう思っていました。が、ここで先ほど述べた  
  
『_一意の秘密鍵と証明書を使用してサービスへの認証を行うことでTLS接続を確立する_』  
  
が意味を成すのです。  
そう、秘密鍵と証明書を使用してTLS接続を確立している時点でアプリAへの依頼なのかアプリBへの依頼なのか決まっているのです。

####因みに...
因みに、そもそも私がデバイストークンとは端末のアプリごとに異なると思っていた理由を紹介しましょう。  
先ほどの説明の中でデバイストークンは１端末につき１つのデバイストークンと言いましたが、それをいきなり覆します！  
実はDevelopment版とProduction版でデバイストークンは異なるんです！  
これに私は完全に翻弄されてしまったのです(汗)  
そして、プッシュの証明書が異なれば(つまりはアプリごと)デバイストークンは異なるのだと思いこんでしまったのです...。  

ではなぜDevelopment版とProduction版でデバイストークンは異なるのでしょうか？完全なる答えはわかりませんが、  
Development版はプロバイダアプリケーションの初版の開発とテストに使用されるサンドボックス環境であり、アクセス先として『_gateway.sandbox.push.apple.com_』を設定します。  
一方でProduction版のアクセス先はsandboxを外した『_gateway.push.apple.com_』を設定します。  
なるほど、アクセス先が違うのでデバイストークンが変わりそうな気がします...  
参考までにサイトのページを載せておきます。  
![Apple Developer サイト](/images/apple_developer_site1.png)  

ここまで説明した内容は全てiOS6.1以前のものであり、iOS7は含みません。[iOS7からはアプリごとに異なるといった記事](http://blog.katty.in/4162 "iOS7でプッシュ通知のデバイストークンに大きな変更")も見られるので、またのちほど実験していくつもりです。

皆さんもぜひ自分の眼でお試しあれ  
しかし、今回は全部、文字になってしまったな〜。気が向いたらもう少しわかりやすく編集し直します。

<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- 広告2 -->
<ins class="adsbygoogle"style="display:inline-block;width:320px;height:100px"data-ad-client="ca-pub-2881241309408290"data-ad-slot="6603059167"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
